#+TITLE: KDE Notes
#+AUTHOR: David Conner
#+DESCRIPTION:
#+PROPERTY:
#+STARTUP: content
#+OPTIONS: toc:nil

* Ideas for KDE

- [[https://wiki.archlinux.org/index.php/KDE][KDE Archwiki]]

*** Surveying the potential endpoints for automation

- find references to key paths like =/etc/*=, =/var/*= and similar by
  searching files like =/var/log/pacman.log=
- the absolute basics of configuration management for specific
  apps/packages should be found in =PKGBUILD= repos
- gather info from =.desktop= entries (sometimes; useful for chrome
  shortcuts or browser configs). details found on
  [[https://wiki.archlinux.org/index.php/Desktop_entries][Desktop Entries]] archwiki

  - =gendesk= can reflect on these =PKGBUILD= files
  - =lsdesktopf= can list/search =.desktop= files
  - icons can be downloaded from
    [[http://openiconlibrary.sourceforge.net/][open icon library]]

*** Session/Window Management


**** [[https://community.kde.org/KWin/Wayland#Start_a_Plasma_session_on_Wayland][KWin/Wayland]]
+ [[https://shibumi.dev/posts/wayland-in-2021/][status of Wayland in 2021]]
+ [[https://www.proli.net/2020/04/03/developing-kwin-wayland/][Developing KWin Wayland]]
+ [[https://community.kde.org/Sprints/Wayland/2021Virtual][Wayland 2021 sprint]]

**** [[https://wiki.archlinux.org/index.php/XDG_Autostart][XDG Autostart]] can be used
+ to load =.desktop= definitions (which are apparently brittle). the archwiki
  mentions
+ application launch scripts can be gradually built up from =.desktop= scripts
  and other available config entities (hashes merged on top of these can
  function as launch profiles specific to a =virtual-desktop= or a Plasma
  =activity=

*** Wayland's =xdg-session-management= gradually replaces =XSMP=

****  [[https://www.datamation.com/open-source/the-mystery-of-kde-activities/][The Mysteryof KDE Activities]]
+ a 2012 blog referencing the below 2011 blog before interest was lost in
  activities.........
**** [[https://chani.wordpress.com/2011/08/01/beyond-activities-cross-device-sessions/#more-706][Beyond Activities: Cross-Device Sessions]]
+ 2011 Blog: XSMP, KDE Activities, Cross-Device Sessions and the gradual move to
  [what became] Wayland's XDG Session Manager

*** Idempotent approach to KDE activity state (via xmonad-like hooks)

an implementation of the idea would be like an advanced =xmonad= config
where:

- the =managehooks= and other hooks effectively create an *idempotent
  monad* that can assess the window/process state in an activity (or
  xmonad topicspace)
- and re/create it from nothing move *or* move it towards an ideal
  intended state (i.e. x,y,z programs opened with d,f,g args to run
  a,b,c selenium-style UI interactions to arrive at the targeted
  topicspace state requirements)

**** requires capabilities of [[https://wiki.haskell.org/Xmonad/Mutable_state_in_contrib_modules_or_xmonad.hs][XMonad with Mutable State]]

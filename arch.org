
* Arch

+ [[https://k1sslinux.org/][KISS Linux]] (also check this out)

** BTR FS

** Recovery

*** Check fs using [[https://stackoverflow.com/questions/30884044/how-to-fix-btrfs-root-inode-errors][btrfsck]]:

The =--backup= option uses an alternative superblock to check the fs.

=sudo btrfsck --progress --backup --readonly --check-data-csum /dev/sda2=

Results (with default superblock)

#+begin_quote
╰─± sudo btrfsck --progress --readonly --check-data-csum /dev/sda2
[sudo] password for dc:
Opening filesystem to check...
parent transid verify failed on 413398450176 wanted 523568 found 520710
parent transid verify failed on 413398450176 wanted 523568 found 520710
parent transid verify failed on 413398450176 wanted 523568 found 520710
Ignoring transid failure
ERROR: could not setup extent tree
ERROR: cannot open file system
#+end_quote

Results with alt superblock

#+begin_quote
╰─± sudo btrfsck --progress --backup --readonly --check-data-csum /dev/sda2
Opening filesystem to check...
Checking filesystem on /dev/sda2
UUID: 04f5b020-8331-49fe-916c-a672179cca30
[1/7] checking root items                      (0:00:44 elapsed, 766588 items checked)
[2/7] checking extents                         (0:02:11 elapsed, 123389 items checked)
[3/7] checking free space cache                (0:00:03 elapsed, 399 items checked)
[4/7] chunresolved ref dir 491 index 7 namelen 39 name qtshadercache-x86_64-little_endian-lp64 filetype 2 errors 4, no inode ref
        unresolved ref dir 495 index 7 namelen 39 name qtshadercache-x86_64-little_endian-lp64 filetype 0 errors 3, no dir item, no dir index
[4/7] checking fs roots                        (0:00:20 elapsed, 88957 items checked)
ERROR: errors found in fs roots
found 409902575616 bytes used, error(s) found
total csum bytes: 394345288
total tree bytes: 2020704256
total fs tree bytes: 1462960128
total extent tree bytes: 80003072
btree space waste bytes: 333180192
file data blocks allocated: 433565528064
 referenced 428525404160
#+end_quote


*** Use [[https://www.sans.org/blog/mounting-images-using-alternate-superblocks/][Alternative Superblocks]]:

Find by passing =-n= option to =mk2fs= to get it to assess/try but not act.

=sudo mkfs -n /dev/sda2=


#+begin_quote
mke2fs 1.46.2 (28-Feb-2021)
/dev/sda2 contains a btrfs file system
Proceed anyway? (y,N) y
Creating filesystem with 117534921 4k blocks and 29384704 inodes
Filesystem UUID: 7f022f84-40aa-4338-8828-75dd844a6009
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968,
        102400000
#+end_quote

now mount the btrfs =@root= with readonly (and other =/etc/fstab= options)

=sudo mount -rt btrfs -o "ro,noatime,compress=zstd:3,space_cache,autodefrag,subvol=@,sb=819200" /dev/sda2 /run/media/mbp2011=

the superblock is not being read properlty by =mkefs= (it warns about this) and =btrfsck= doesn't seem to specify details about the alternative superblock it's using.

it would seem that there are two problems:

+ corruption at/near root blocks/inodes
+ and/or some kind of transaction logging problem (there is info about problems
  that cna happen where BTRFS writes some changes before other types of changes)
+ FAT partition (grub) also corrupted

** Pacman

*** =/etc/pacman-mirrors.conf=

+ set to 
  - doesn't seem to force HTTPS by default

** Pamac

*** just don't use it 

- why have i not thought about explored GUI alternatives?!!
- the GUI keeps changing ... and losing features
  - i can't select text without clicking apply
- the CLI ... isn't "turing complete"
  - j/k ... but there are a ton of operations which have no solution in CLI
    - like discovering what to un/install or re/build
    - which is analogous to a language which lacks support for grammar/etc and thus cannot express certain programs
  - it's bc there's no way to stage large lists of transactions that all must succeed or fail
    - i.e. re/installing or re/building alternative packages for ALSA/pipewire WHICH KEEPS FUCKING BREAKING 

** Pamac alternatives

only yup, octopi, cylon and pkgbrowser have been updated in 2020

*** Octopi

the most recently updated ... 

- and now i remember using it ... 
  - but my system crashed and wompwomp i didn't condition it's usage for long enough to remember
- social isolation in technology is killing me

Octopi makes it hard to use AUR, afaik

- requires clicking enable AUR, then restarting
  - but you'll need to create a folder for builds =/var/tmp/octopi-build-dc
  - nevermind, you'll need to install an AUR helper
    - =yay= and =pikaur= are the most active.
    - =yay= is the default. yay it is ..... yayyy pipewire

*** Yup

- doesn't work for me. never starts. 
- requires using KRun bc the start menu in KDE doesn't know about it

*** Cylon

TODO: try it

*** PkgBrowser

- read-only (but useful? fingers crossed)
- this is nice

** Reflector

#+begin_quote
mirrors aren't such a big deal with guix, although there are other issues
#+end_quote


+ get mirrors from countries: nl,ca,uk,us,de,fr,es,kr,jp
  - HTTPS & IPv6 only
    - IPv6 is IPSec [[https://www.redhat.com/sysadmin/ipv6-packets-and-ipsec][by default]]
    - ... kinda (see [[https://www.rfc-editor.org/info/rfc6434][RFC 6434]] apparently
  - of the fastest, select 25
  - then sort by score (randomness)

*** Setup

1) configure =/etc/xdg/reflector/reflector.conf=
  - see [[https://archlinux.org/mirrors/status/][arch mirror status]] for details
  - score :: ~(avg(mirror.delay) + avg(sync.duration) + std_dev(sync.duration)) / mirror.completion.pct~
2) enable reflector.service 
  - after enabling, start it to test
  - if =--verbose= flag is set, mirror testing process will be available via ~journalctl~
3) update timer (4 days)

#+BEGIN_SRC shell :tangle no
--save /etc/pacman.d/mirrorlist
--verbose 
--fastest 25
--protocol https 
--country nl,ca,uk,us,de,fr,es,kr,jp
--ipv6
--sort score 
#--sort age
#--threads 3 # not sure if i can thread this
#+END_SRC

configure =reflector.service=

#+BEGIN_SRC shell :tangle no
#!/bin/bash
# this will refresh all mirrors on boot ............ . . . 
# systemctl enable reflector.service

# start it to test the configuration
systemctl start reflector.service

# make sure it's disabled, so it doesn't affect boot
systemctl disable reflector.service
#+END_SRC

after successful refresh/selection of mirrors via =reflector.service=, enable
the [[https://wiki.archlinux.org/title/Systemd/Timers][systemd timer]]

#+BEGIN_SRC shell :tangle no
#!/bin/bash
systemctl enable reflector.timer
systemctl start reflector.timer
#+END_SRC

+ The defaults are fine, but to edit: ~systemctl edit reflector.timer~
  - Persistent means it will run if the calendar time is missed
  - RandomizedDelaySec means it won't run after a calendar time unless =12h= has passed
  - Defaults can be found in [[file:/usr/lib/systemd/system/reflector.timer][/usr/lib/systemd/system/reflector.timer]]

setup services:


** A Healthy Dose of Docker...

is there a simple way to use docker containers to cull out excessive systemd
units?

*** Debloat Packages & SystemD Units
+ loading hundreds of units is ridiculous
+ allowing like 250+ units each for system/user stuff is a bit ridiculous

** System D

+ Some highly opinionated reasons not to use [[https://chiefio.wordpress.com/2016/05/18/systemd-it-keeps-getting-worse/][SystemD]]
  - it's not easy to [[https://www.youtube.com/watch?v=_ljfOCiP0XM&t=690s][find an alternative]] init system that [[https://www.youtube.com/watch?v=o_AIw9bGogo][solves these problems]]
+ [[https://www.computernetworkingnotes.com/linux-tutorials/systemd-unit-configuration-files-explained.html][SystemD Configuation Explained]]

*** GUI management tools
+ use =systemdgenie= if using systemd
  - systemd-ui (try it?)
  - both are available from AUR

*** Emacs
Emacs can be run as a systemd unit (in server mode)

*** Timers
+ Check the least frequent BTRFS timer =btrfs-scrub@-.timer=
  - it has malformed unit id (& etc). 
  - there is a problem with BTRFS being unable to delete prior updates
  - backups may not be purged or created properly
  - also, the system may not be able to reconcile the pre-March 2021 BTRFS backups

** Automation

*** TODO figure out the best way to integrate run automated admin tasks 

+ status checks (present notifications via KDE)
  - check last pacman/pamac updates (esp. pamac =--aur= and =--devel=
    - need to ensure passwordsafe and other packages are up to date
+ and automated tasks
  - like checking for updates to git repo's 
    - either all of them enumerated under a =manifest.xml=
    - or just some of them (listed under a group)






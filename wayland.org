#+TITLE: Wayland Notes
#+AUTHOR: David Conner
#+DESCRIPTION:
#+PROPERTY:
#+STARTUP: content
#+OPTIONS: toc:nil

* Table of Contents :TOC_3_gh:
- [[#wayland][Wayland]]
  - [[#wayland-overview-02][Wayland Overview]]
  - [[#pipewire][Pipewire]]
    - [[#first-things-first][First things first:]]
    - [[#journey-the-4th][Journey the 4th]]
    - [[#journey-the-5th][Journey the 5th]]
    - [[#misc][Misc]]

* Wayland :wayland:

So I would like my Linux to be as close to full wayland as possible. I've only
run into a few problems so far, but there are probably many parts of my system
that need to be changed.

For now, I'm running on KDE, but I plan on switching to XMonad + KDE soon. Why
XMonad? KDE activities aren't well supported and are not likely to be in the
near future. I've only scraped the surface of Wayland/KDE and I'm not sure how
XMonad intersects with Wayland.


** TODO Wayland Overview [0/2] :wayland:
+ [ ] assess how close my system really is to 100% wayland

** Pipewire

#+begin_quote
smdh i guess i forgot that alsa/pipewire packages are not friendly to each
other... ALSA services are broken on my 2011mbp but pipewire services startup
fine without them..... . . . .

there really are no words to explain this feeling

on the other hand, this guy is [[https://adam.younglogic.com/2021/04/unifying-audio-with-pipewire/][using pipewire to stream audio]] to [[https://jamulus.io/][jamulus.io]].
#+end_quote

Pipewire plans on replacing PulseAudio in Wayland. This is where I've run into
the most problems so far. This has happened on either laptop about 5 times since
October 2020.

+ and again the archwikis/links for reference:
  - [[https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture][ALSA]]
  - [[https://wiki.archlinux.org/title/PipeWire][PipeWire]]
  - [[https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture/Troubleshooting][ALSA Troubleshooting]]
  - [[https://www.mjmwired.net/kernel/Documentation/sound/alsa/ALSA-Configuration.txt][Advanced ALSA modules config]]
  - [[https://www.volkerschatz.com/noise/alsa.html][ALSA Concepts]]
  - This [[https://forum.garudalinux.org/t/pipewire-not-detecting-any-audio-device/7051][Garuda thread]]

*** First things first:

The other sections that follow are what I tried before looking at it as an =alsa= problem instead of a =systemd= problem, which was a huge mistake considering systemd wraps things ...

+ look at the damn archwiki's
  - everything else has had me running in circles...


+ This should be sufficient for getting ALSA working again.
  - the pipewire service units (user services) may have a service loading order
    problem. the solution to this is a timer for kicking off the hierarchy of
    pipewire services.
  - That should *definitely* be checked first, which i think was my problem
    (simply hoping that removing/resintalling things would bring them
    back.........)

**** (1) Test speakers & direct soundcard access with =speaker-test=
- hear noise? good. ALSA can directly talk to your sound card
- if there's no noise, you have an Alsa/Hardware interface problem
- if there is noise, you may have an Alsa configuration problem.
  + it's best to work bottom up here because the low-level shit is easy to test, which is probably generally true greybeard wisdom
    - i.e. knowing/using commands like =lsusb= ... or knowing simply that there
      is a battery of linux hardware shit called =ls***= that is conveniently
      named thus because Nuff said "unix philosophy". not having the mnemonic
      there is disastrous.
**** (2) now check on ALSA's configs
- run =aplay -l= to generate device id's
- set default devices in =/etc/asound.conf= (didn't exist for me)

#+begin_src conf :tangle no
defaults.pcm.card $id
defaults.ctl.card $id
#+end_src

the following [[https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture#Alternative_method][alternative configuration]] section for ALSA a different config style for =/etc/asound.conf=.

- it says that preferring card names over id's avoids the boot-order problem.

#+begin_src conf :tangle no
pcm.!default {
    type hw
    card Audio
}

ctl.!default {
    type hw
    card Audio
}
#+end_src


**** (3) configure index order (via kernel module options)
- run =cat /proc/asound/modules= to list the loaded sound modules (and order)
  - other ALSA proc files are listed in the [[https://www.kernel.org/doc/html/latest/sound/designs/procfile.html][Linux Kernel docs]]
- run =lsmod | grep snd= to get devices/modules list
- set load order for selecting primary device in =/etc/modprobe.d/alsa-base.conf=
  - prevent a device from being selected as primary with =-2=

#+begin_src conf :tangle no
options snd_hda_foo index=0
options snd_hda_foo index=1
options snd_usb_bar index=2
#+end_src

**** (4) examine hooks/files for loading of devices in =/usr/share/alsa/alsa.conf=

- look at =@hooks= and =cards.@hooks= to relevant files to examine
- =find /usr/share -name "*asound*"= can find useful stuff
  - if you installed the docs, check =/usr/share/doc/alsa-lib-git/asoundrc.txt= for =.asoundrc= config format
- ALSA shouldn't need anything except the default config (for me) and this looks new
  - so move =~/.asoundrc= and =~/.config/alsacontrol/*= to =$DOTFILES/mediaconfig=
  - from =~/.config=, link the alsa control directory. don't link =~/.asoundrc=. this decouples the config that =~/.asoundrc= is loading (which itself is referring to a copy of the default config that was in =.config/aslacontrol=)
  - this (and pipewire and things like =alsa-topology-conf=) will be nice to know later on



*** Journey the 4th

*TLDR* if you've got pipewire and your audio isn't coming up after reboot,
chances are it's the packages/services/dependencies for ALSA and/or pipewire.
Occassionally a package may clobber your AUR dependencies and reinstall
PulseAudio.

**** Removing Pipewire/Pulseaudio packages

There are some problem packages on AUR which will sneakily riinstall
=pulseaudio= packages if you're not watching. In some cases, this forces you to
reinstall ALL =pipewire= dependent packages, which includes =kwin=, depending on
how deeply fucked your system is. Pamac and AUR are usually pretty good at
selecting the optional =pulseaudio=-providing packages, leaving your pipewire
intact. However, I've just reinstalled pipewire on my system for the third time,
twice on my MBP 2011 and now once on my MBP 2013.

Problem packages:
+ [[https://aur.archlinux.org/packages/fedora-firefox-wayland-bin/][fedora-firefox-wayland-bin]],
  - this has the optional dependency of pulseaudio, which should be provided by =pipewire-pulse=.
  - however, my system's audio was just hosed by this and i had to manually reinstall pipewire & alsa.
+ there are others...

The following removes most of the pipewire/pulse packages:

#+begin_src shell :tangle no
sudo pacman -Rns \
    pulseeffects \
    pipewire-pulse \
    plasma-pa paprefs \
    pavucontrol \
    pavucontrol-qt
sudo pacman -Rns \
    pulseaudio-alsa \
    pulseaudio-ctl \
    pulseaudio-equalizer-ladspa
sudo pacman -Rns \
    mkchromecast-git \
    pipewire-support
#+end_src

Notes on reinstalling

+ avoid any install of pulseaudio like the plague
+ as long as pulseaudio is totally off your system,
  - then once pipewire-support is installed
  - the pulseaudio package is suppied by pipewire-pulse
  - pipewire-pulse then conflicts with pulseaudio
+ This may require restarting the system at various points, esp. if one wants to
  test whether the changes are permanent.

**** Reinstalling Pipewire Packages

***** Install the =pipewire-support= group

#+begin_src shell :tangle no
sudo pacman -Syu pipewire-support
sudo pacman -Syu plasma-pa
#+end_src

**** Restarting Pipewire/Alsa Services

**** Search for running pipewire/pulse services

#+begin_src shell :tangle no
systemctl --user list-units | grep pipewire
systemctl --user list-units | grep audio
systemctl --user list-units | grep pulse
#+end_src

**** Get status of =pipewire.service= and restart it

#+begin_src shell :tangle no
systemctl --user status pipewire.service
systemctl --user reload-or-restart pipewire.service
systemctl --user status pipewire.service
#+end_src

**** Look for pipewire services

#+begin_src shell :tangle no
systemctl --user list-units | grep pipe
systemctl --user status pipewire-pulse.socket
systemctl --user status pipewire-pulse.service
systemctl --user reload-or-restart pipewire-pulse.service
systemctl --user status pipewire-pulse.service
#+end_src


- I thought maybe the pipewire services were still down after boot, since the ALSA services fail to start during boot
  - but none of the pipewire services seem to list ALSA services as dependencies
  - this means pipewire is expecting to get information about audio hardware from another service/location, perhaps an intermediary service

***** Examine the Pipewire service dependencies

#+begin_src shell :tangle no
systemctl --user list-dependencies pipewire-media-session.service
#+end_src

#+begin_quote
pipewire-pulse.service
● ├─pipewire-pulse.socket
● ├─pipewire.service
● ├─session.slice
● └─basic.target
●   ├─paths.target
●   ├─sockets.target
●   │ ├─dbus.socket
●   │ ├─dirmngr.socket
●   │ ├─gpg-agent-browser.socket
●   │ ├─gpg-agent-extra.socket
●   │ ├─gpg-agent-ssh.socket
●   │ ├─gpg-agent.socket
●   │ ├─p11-kit-server.socket
●   │ └─pipewire.socket
●   └─timers.target
#+end_quote


**** Troubleshooting ALSA

***** These services are running under root, but failing during boot with commands like

#+begin_quote
/usr/bin/alsactl: state_lock:125: file /var/lib/alsa/asound.state lock error: File exists
/usr/bin/alsactl: load_state:1683: Cannot open /var/lib/alsa/asound.state for reading: File exists
alsa-lib parser.c:260:(error_node) UCM is not supported for this HDA model (HDA Intel PCH at 0xa0900000 irq 50)
alsa-lib main.c:1014:(snd_use_case_mgr_open) error: failed to import hw:0 use case configuration -6
Found hardware: "HDA-Intel" "Cirrus Logic CS4206" "HDA:10134206,106b1c00,00100302 HDA:80862805,80860101,00100000" "0x8086" "0x7270"
Hardware is initialized using a generic method
#+end_quote

***** =alsa.state= or =alsa.restore= services: you typically only have one of these running.

Following a reinstall of the packages/services for ALSA and Pipewire, a manual
user action is required to get the Alsa services to restart.

Each is an alternative method of mediating access to ALSA hardware devices via
Linux. The idea behind forcing the user to choose which to use and requiring
user action to activate is that each method =alsa-state= and =alsa-restore= has
pro's and con's -- /which I can't recall, your honor/. Neither is perfect and the
user should be aware *at least once* of services interfacing with audio devices
on their system.

#+begin_src shell :tangle no
sudo systemctl list-dependencies alsa-state.service
sudo systemctl list-dependencies alsa-restore.service
#+end_src


***** useful links & tidbits for my chip: Cirrus Logic CS4206/4207

+ [[https://www.kernel.org/doc/html/latest/sound/hd-audio/models.html][Lists of audio hardware for laptops.]]
  - For me, I just needed to ctrl-f for =Cirrus= and/or =CS4206=
+ [[https://forum.garudalinux.org/t/soundcard-issues/3665/8][A useful Garuda Linux forum post on ALSA]]
+ [[https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture#ALSA_and_Systemd][The ArchWiki post on ALSA and associated services]]
  - it mentions needing to choose between alsa-restore.service & alsa-state.service
+ alsa startup scripts mention UCM method being unavailable for my chip
  - SOF is a newer method, so probably unavailable too.
  - This was mostly a red herring for me. Goddammit Fred.

***** Troubleshooting modules/hardware access:

#+begin_quote
modinfo hdaudio:v10134206r\*a01\*
#+end_quote

***** Using =alsa-info.sh=

Found =alsa-info.sh=, which is mainly what the =alsa-utils= package provides

#+begin_src shell :tangle no
sudo pacman -Syu alsa-utils

# run this to follow the white rabbit
pacman -Fl alsa-utils | grep bin
#+end_src

When you run the script, you will be asked to update to 0.6.0, which will be downloaded to a temporary file. You'll need to replace it manually. Run it again.

#+begin_src shell :tangle no
/usr/bin/alsa-info.sh
#+end_src



*** Journey the 5th

It must be kernel updates or systemd reconfigurations. It's affecting both my
laptops now, two days after i exorcised the alsa daemons ... so.


#+begin_quote
really, the only reason I'm still at this is because I am legitimately
interested in Wayland, Pipewire (topologies/streaming/etc) and understanding
more about what's under the hood here.
#+end_quote



**** Planned package changes:

+ remove ALSA, replace with the bleeding edge develop packages
  - or use the nosystemd packages
+ =pipewire-full-git= provides:
  - pipewire
  - pipewire-media-session
  - alsa-card-profiles
  - =libpipewire-0.3.so=0-64=
+ The table below might not be 100% accurate... I'm not sure
  - Guix is always sure though.
  - (R)emove, (I)nstall, (B)uild, (D)evel

|-------------------------------+---------------+---+---+---+---|
| context                       | pkg           | R | I | B | D |
|-------------------------------+---------------+---+---+---+---|
| *ALSA*                        | support       | r | . | . | d |
| alsa-.*(:?-git)               | utils         | r | . | . | d |
|                               | lib           | r | . | . | d |
|                               | card profiles | r | . | . | . |
|                               | capabilities  | . | i | . | . |
|                               | control       | . | i | . | . |
|                               | firmware      | . | i | . | . |
|-------------------------------+---------------+---+---+---+---|
| *Pipewire*                    | support       | r | . | . | d |
| pipewire(:?-full)-.*-(:?git)) | alsa          | r | . | . | d |
|                               | pulse         | r | . | . | d |
|                               | jack          | r | . | . | d |
|                               | docs          | . | . | . | d |
|                               | media-session | r | . | . | d |
| (.*)-pipewire-full-git        | gst-plugin    | r | . | . | d |
|-------------------------------+---------------+---+---+---+---|
| PulseEffects                  | pulseeffects  | r | . | . | d |
| (.*)-pulseeffects-git         | gst-plugin    | . | . | . | d |
|-------------------------------+---------------+---+---+---+---|
| Misc                          | jack2         | . | . | . | . |
|                               | wireplumber   | r | . | . | d |
|                               | plasma-pa     | r | . | . | d |
|-------------------------------+---------------+---+---+---+---|


**** Installed some better GUI tools like =octopi= !!

+ =systemdgenie=
+ =yay=
+ =pkgbrowser=

**** Cut the red wire or the green wire?

Determining which ALSA service to enable is a bit tricky. It seems like =alsa-restore= gives you more granular control whereas =alsa-state= is a bit more automatic/dynamics ..... *but that's probably wrong*

**** Remove =alsa-support= and =pipewire-support=

+ These are the garuda groups via chaotic AUR. They are convenient, but they
  make it harder to load/unload their bundled packages
  - and =pamac= wants to uninstall the whole damn system
    - both browsers, all audio everything and why not multimedia too!
    - oh, don't forget to rebuild KWin/plasma. in one turn; do not pass go.
      - this roulette table is hot and daddy's getting a new pair of shoes

**** Use =octopi= and =yay= to reinstall =pipewire-all-the-things=, but yay is smart
+ be the yay you've always wanted to exclaim
+ yay reconciles a lot of things, but ... POP QUIZ:
  - =#monty-python-bridge-guy= asks you 20 questions and if you get one wrong, you die. Overall it's for the best.

**** Install =pipewire-full-git= and =alsa--git= from devel

+ when new kernels break your shit, hit the gas.
  - that's my logic here, it's risky yes, but not as risky as the roulette stakes for rebuilding KWin/Plasma
+ "new minor version kernels require even newer bugfixes..."
  - which is not entirely tragic n00b logic ... if you manage to stick around
    you might just learn some things along the way Sysyphus
  - IMHO faster updates and shorter feedback loops is a huge plus for Arch
+ cross fingers.... no serious build errors (skipped some packages)

**** Tidy up the packages, check systmed. Restart Arch & Emacs 5 Times.

+ check it again... and again. wtf?
  - try both =alsa-restore= and =alsa-state= interchangeably because hey "round hole, square peg?"
+ nothing works. randomly start =alsacontrol= GUI to find that ... yes, that
  shit can talk to my mic (but not my output/speakers)
+ and I finally see Systemd units for ALSA have changed ... which is not the only thing broken.
  - I could not for the life of my see this one critical "condition failed" for =sudo systemctl status alsa.state= ... which probably means that it's actually new and i've bumbled into fixing something else wrong with audio that I don't understand, but...

#+begin_quote
  Condition: start condition failed at Sun 2021-05-23 21:38:22 EDT; 8s ago
             └─ ConditionPathExists=/etc/alsa/state-daemon.conf was not met
#+end_quote

+ Jenkies :: a clue
  - =/etc/alsa/state-daemon.conf= is nowhere to be found, which probably means the SystemD config shifted between released alsa packages and =AUR devel= packages.
  - what i have instead are some =/etc/alsa/conf.d/= scripts for pipewire....


**** TODO Try adding a delay to alsa-restore.service on systemd.boot

+ however, my system still won't run these services
  - =alsactl restore= and =alsactl nrestore= are failing after boot and probably will during boot as well
  - but a fresh emacs session which can't be reliably restored from =desktop.el= sounds super fun. hopefully the compilation-order issues that i'm getting won't force me to run =./bin/doom sync && ./bin/doom build= again
    - fixing that is yet another "TODO has bought the farm" =EIEIO=
      - do not pass go. do not collect $200.
      - get it? because it's like the TODO's in my org file can't be reliably sequenced for execution without references blowing the shit up and forcing me to restart/rebuild?!/!?
        - do not collect one fucking dollar

from [[https://bbs.archlinux.org/viewtopic.php?id=198137][bbs.archlinux.org]]

#+begin_quote
This is a synchronisation problem: the 'alsa-restore.service' is started before the sound card is initialised in the systemd boot sequence.
So I run again the 'alsa-restore.service' 2min later with a timer to work around this.
#+end_quote

#+begin_src toml :tangle no
[Unit]
Description=Timer for Restore Again Sound Card State

[Timer]
OnBootSec=2min

$ cat alsa-restore-again.service
# Started by alsa-restore-again.timer
#
[Unit]
Description=Restore Again Sound Card State
ConditionPathExists=!/etc/alsa/state-daemon.conf
DefaultDependencies=no

[Service]
Type=oneshot
ExecStart=-/usr/bin/alsactl restore
StandardOutput=syslog
#+end_src

**** Ensure the =alsactl= daemon is functioning properly

Why do the systemd



*** Misc

**** Also strange: abberantly named systemd units:
- control characters
- duplicate service units
  - some with logs & some with none
  - normal? i donno

**** Other services in the `journalctl -xb` logs showing problems

(pretty much just sudo, but what is home1.service?)

#+begin_quote
May 03 05:39:43 mbp2011 sudo[278758]: pam_systemd_home(sudo:account): systemd-homed is not available: Unit dbus-org.freedesktop.home1.service not found.

systemd-udevd[286]: controlC0: Process '/usr/bin/alsactl restore 0' failed with exit code 99.
#+end_quote
